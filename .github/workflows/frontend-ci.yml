name: Frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup & Cache
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.node-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci --prefer-offline
      - run: npm run lint --max-warnings=0

  format:
    name: Format Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci --prefer-offline
      - run: npm run format:check

  test:
    name: Unit Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci --prefer-offline
      - run: npm run test -- --run

  build:
    name: Build
    needs: [lint, format, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci --prefer-offline
      - run: npm run build

  deploy:
    name: Deploy to Vercel
    needs: build # only run if lint, format, test, build all succeeded
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Trigger Vercel Deployment
        run: |
          curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"
